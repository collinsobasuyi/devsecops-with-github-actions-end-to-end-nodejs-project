name: Build code, run unit test, run SAST, SCA, DAST security scans for NodeJs App
on: 
  push:
  workflow_dispatch:  # Allows manual triggering of the workflow.

jobs:
  lint_code:
    runs-on: ubuntu-latest
    name: Lint Codebase with ESLint
    steps:
      - uses: actions/checkout@master
      - name: Setup Node.js
        uses: actions/setup-node@master
        with:
          node-version: '16' # Adjust this to match your project's Node.js version
          cache: 'npm'
      - run: npm install
      - name: Run ESLint
        run: npx eslint . --ext .js,.jsx,.ts,.tsx # Adjust this to match your project's file extensions
        continue-on-error: true

  sonar_cloud_unit_test_sast:
    runs-on: ubuntu-latest
    needs: lint_code
    name: Run unit tests and SAST scan on the source code 
    steps:
    - uses: actions/checkout@master
    - uses: actions/setup-node@master
      with:
        node-version: 16
        cache: npm
    - run: npm install
    - name: SonarCloud Scan
      uses: sonarsource/sonarcloud-github-action@master
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
      with:
        args: >
          -Dsonar.organization=devsecops-github-actions-nodejs-project
          -Dsonar.projectKey=devsecops-github-actions-nodejs-project
  gitleaks_secret_scan_sca:
    runs-on: ubuntu-latest
    needs: sonar_cloud_unit_test_sast
    name: Gitleaks Secret Scan
    steps:
      - uses: actions/checkout@master
      - name: Run git leaks to check for secrets
        uses: gitleaks/gitleaks-action@master
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  snyk_security_scan_sca:
    runs-on: ubuntu-latest
    needs: gitleaks_secret_scan_sca
    name: Run the SCA scan on the source code
    steps:
      - uses: actions/checkout@master
      - name: RunSnyk to check for vulnerabilities
        uses: snyk/actions/node@master
        continue-on-error: true
        env:
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
  zap_security_scan_dast:
    runs-on: ubuntu-latest
    needs: snyk_security_scan_sca
    name: Run DAST scan on the web application
    steps:
      - name: Checkout
        uses: actions/checkout@master
        with:
          ref: master
      - name: ZAP Scan
        uses: zaproxy/action-baseline@master
        with:
          docker_name: 'owasp/zap2docker-stable'
          target: 'http://example.com/'
          rules_file_name: '.zap/rules.tsv'
          cmd_options: '-a'
